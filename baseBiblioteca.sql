-- MySQL Script generated by MySQL Workbench
-- 03/18/18 22:29:22
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema bibliotecaJava
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bibliotecaJava
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bibliotecaJava` DEFAULT CHARACTER SET utf8 ;
USE `bibliotecaJava` ;

-- -----------------------------------------------------
-- Table `bibliotecaJava`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`usuario` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `usuario` VARCHAR(80) NULL,
  `password` VARCHAR(80) NULL,
  `estado` TINYINT(1) NULL,
  PRIMARY KEY (`id_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`datos_personales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`datos_personales` (
  `id_datos_personales` INT NOT NULL AUTO_INCREMENT,
  `id_usuario` INT NOT NULL,
  `nombre` VARCHAR(80) NULL,
  `apellido` VARCHAR(80) NULL,
  `genero` TINYINT(1) NULL,
  `email` VARCHAR(80) NULL,
  PRIMARY KEY (`id_datos_personales`),
  INDEX `fk_datos_personales_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_datos_personales_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `bibliotecaJava`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`catalogo_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`catalogo_roles` (
  `id_catalogo_roles` INT NOT NULL AUTO_INCREMENT,
  `rol` VARCHAR(80) NULL,
  `descripcion` VARCHAR(80) NULL,
  PRIMARY KEY (`id_catalogo_roles`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`estante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`estante` (
  `id_estante` INT NOT NULL AUTO_INCREMENT,
  `nombre_estante` VARCHAR(80) NULL,
  `descripcion` VARCHAR(80) NULL,
  PRIMARY KEY (`id_estante`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`categoria` (
  `id_categoria` INT NOT NULL AUTO_INCREMENT,
  `categoria` VARCHAR(80) NULL,
  `descripcion` VARCHAR(80) NULL,
  PRIMARY KEY (`id_categoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`item` (
  `id_item` INT NOT NULL AUTO_INCREMENT,
  `id_categoria` INT NOT NULL,
  `id_estante` INT NOT NULL,
  `nombre` VARCHAR(80) NULL,
  `descripcion` VARCHAR(80) NULL,
  `unidades_para_prestar` INT NOT NULL,
  PRIMARY KEY (`id_item`),
  INDEX `fk_catalogo_item_estante1_idx` (`id_estante` ASC),
  INDEX `fk_item_categoria1_idx` (`id_categoria` ASC),
  CONSTRAINT `fk_catalogo_item_estante1`
    FOREIGN KEY (`id_estante`)
    REFERENCES `bibliotecaJava`.`estante` (`id_estante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_item_categoria1`
    FOREIGN KEY (`id_categoria`)
    REFERENCES `bibliotecaJava`.`categoria` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`libro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`libro` (
  `id_libro` INT NOT NULL AUTO_INCREMENT,
  `id_item` INT NOT NULL,
  `nota` VARCHAR(80) NULL,
  `edicion` VARCHAR(85) NULL,
  `fecha_publicacion` DATE NULL,
  `lugar_publicacion` VARCHAR(80) NULL,
  PRIMARY KEY (`id_libro`),
  INDEX `fk_libro_catalogo_item1_idx` (`id_item` ASC),
  CONSTRAINT `fk_libro_catalogo_item1`
    FOREIGN KEY (`id_item`)
    REFERENCES `bibliotecaJava`.`item` (`id_item`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`estudiante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`estudiante` (
  `id_estudiante` INT NOT NULL AUTO_INCREMENT,
  `id_datos_personales` INT NOT NULL,
  `carnet` VARCHAR(80) NULL,
  PRIMARY KEY (`id_estudiante`),
  INDEX `fk_estudiante_datos_personales1_idx` (`id_datos_personales` ASC),
  CONSTRAINT `fk_estudiante_datos_personales1`
    FOREIGN KEY (`id_datos_personales`)
    REFERENCES `bibliotecaJava`.`datos_personales` (`id_datos_personales`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`tipo_telefono`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`tipo_telefono` (
  `id_tipo_telefono` INT NOT NULL AUTO_INCREMENT,
  `tipo_telefono` VARCHAR(80) NULL,
  PRIMARY KEY (`id_tipo_telefono`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`telefono`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`telefono` (
  `id_telefono` INT NOT NULL AUTO_INCREMENT,
  `id_tipo_telefono` INT NOT NULL,
  `id_datos_personales` INT NOT NULL,
  `telefono` VARCHAR(80) NULL,
  PRIMARY KEY (`id_telefono`),
  INDEX `fk_telefono_datos_personales1_idx` (`id_datos_personales` ASC),
  INDEX `fk_telefono_tipo_telefono1_idx` (`id_tipo_telefono` ASC),
  CONSTRAINT `fk_telefono_datos_personales1`
    FOREIGN KEY (`id_datos_personales`)
    REFERENCES `bibliotecaJava`.`datos_personales` (`id_datos_personales`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_telefono_tipo_telefono1`
    FOREIGN KEY (`id_tipo_telefono`)
    REFERENCES `bibliotecaJava`.`tipo_telefono` (`id_tipo_telefono`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`tipo_direccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`tipo_direccion` (
  `id_tipo_direccion` INT NOT NULL AUTO_INCREMENT,
  `tipo_direccion` VARCHAR(80) NULL,
  PRIMARY KEY (`id_tipo_direccion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`direccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`direccion` (
  `id_direccion` INT NOT NULL AUTO_INCREMENT,
  `id_tipo_direccion` INT NOT NULL,
  `id_datos_personales` INT NOT NULL,
  `direccion` VARCHAR(80) NULL,
  PRIMARY KEY (`id_direccion`),
  INDEX `fk_direccion_datos_personales1_idx` (`id_datos_personales` ASC),
  INDEX `fk_direccion_tipo_direccion1_idx` (`id_tipo_direccion` ASC),
  CONSTRAINT `fk_direccion_datos_personales1`
    FOREIGN KEY (`id_datos_personales`)
    REFERENCES `bibliotecaJava`.`datos_personales` (`id_datos_personales`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_direccion_tipo_direccion1`
    FOREIGN KEY (`id_tipo_direccion`)
    REFERENCES `bibliotecaJava`.`tipo_direccion` (`id_tipo_direccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`prestamo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`prestamo` (
  `id_prestamo` INT NOT NULL AUTO_INCREMENT,
  `id_usuario` INT NOT NULL,
  `id_catalogo_item` INT NOT NULL,
  `fecha_prestamo` DATE NULL,
  `fecha_pactada` DATE NULL,
  `descripcion` VARCHAR(80) NULL,
  PRIMARY KEY (`id_prestamo`),
  INDEX `fk_prestamo_usuario1_idx` (`id_usuario` ASC),
  INDEX `fk_prestamo_catalogo_item1_idx` (`id_catalogo_item` ASC),
  CONSTRAINT `fk_prestamo_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `bibliotecaJava`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_prestamo_catalogo_item1`
    FOREIGN KEY (`id_catalogo_item`)
    REFERENCES `bibliotecaJava`.`item` (`id_item`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`revista`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`revista` (
  `id_revista` INT NOT NULL AUTO_INCREMENT,
  `id_editorial` INT NOT NULL,
  `id_item` INT NOT NULL,
  PRIMARY KEY (`id_revista`),
  INDEX `fk_revista_catalogo_item1_idx` (`id_item` ASC),
  CONSTRAINT `fk_revista_catalogo_item1`
    FOREIGN KEY (`id_item`)
    REFERENCES `bibliotecaJava`.`item` (`id_item`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`tesis`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`tesis` (
  `id_tesis` INT NOT NULL AUTO_INCREMENT,
  `id_item` INT NOT NULL,
  `descripcion` VARCHAR(80) NULL,
  PRIMARY KEY (`id_tesis`),
  INDEX `fk_tesis_catalogo_item1_idx` (`id_item` ASC),
  CONSTRAINT `fk_tesis_catalogo_item1`
    FOREIGN KEY (`id_item`)
    REFERENCES `bibliotecaJava`.`item` (`id_item`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`profesor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`profesor` (
  `id_profesor` INT NOT NULL AUTO_INCREMENT,
  `id_datos_personales` INT NOT NULL,
  PRIMARY KEY (`id_profesor`),
  INDEX `fk_profesor_datos_personales1_idx` (`id_datos_personales` ASC),
  CONSTRAINT `fk_profesor_datos_personales1`
    FOREIGN KEY (`id_datos_personales`)
    REFERENCES `bibliotecaJava`.`datos_personales` (`id_datos_personales`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`cd`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`cd` (
  `id_cd` INT NOT NULL AUTO_INCREMENT,
  `id_item` INT NOT NULL,
  PRIMARY KEY (`id_cd`),
  INDEX `fk_cd_catalogo_item1_idx` (`id_item` ASC),
  CONSTRAINT `fk_cd_catalogo_item1`
    FOREIGN KEY (`id_item`)
    REFERENCES `bibliotecaJava`.`item` (`id_item`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`devolucion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`devolucion` (
  `id_devolucion` INT NOT NULL AUTO_INCREMENT,
  `id_prestamo` INT NOT NULL,
  `fecha_devolucion` DATE NULL,
  PRIMARY KEY (`id_devolucion`),
  INDEX `fk_devolucion_prestamo1_idx` (`id_prestamo` ASC),
  CONSTRAINT `fk_devolucion_prestamo1`
    FOREIGN KEY (`id_prestamo`)
    REFERENCES `bibliotecaJava`.`prestamo` (`id_prestamo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`usuario_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`usuario_roles` (
  `id_catalogo_roles` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  INDEX `fk_usuario_roles_catalogo_roles1_idx` (`id_catalogo_roles` ASC),
  INDEX `fk_usuario_roles_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_usuario_roles_catalogo_roles1`
    FOREIGN KEY (`id_catalogo_roles`)
    REFERENCES `bibliotecaJava`.`catalogo_roles` (`id_catalogo_roles`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_roles_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `bibliotecaJava`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`autor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`autor` (
  `id_autor` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(80) NULL,
  PRIMARY KEY (`id_autor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`libro_autor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`libro_autor` (
  `id_autor` INT NOT NULL,
  `id_libro` INT NOT NULL,
  INDEX `fk_table1_autor1_idx` (`id_autor` ASC),
  INDEX `fk_table1_libro1_idx` (`id_libro` ASC),
  CONSTRAINT `fk_table1_autor1`
    FOREIGN KEY (`id_autor`)
    REFERENCES `bibliotecaJava`.`autor` (`id_autor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_table1_libro1`
    FOREIGN KEY (`id_libro`)
    REFERENCES `bibliotecaJava`.`libro` (`id_libro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliotecaJava`.`autor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliotecaJava`.`parametros` (
  `id_parametros` INT NOT NULL AUTO_INCREMENT,
  `mora_por_dia` decimal(15,2) NOT NULL,
  `dias_prestar_alumno` INT NOT NULL,
  `dias_prestar_profesor` INT NOT NULL,
  `cantidad_prestar_alumno` INT NOT NULL,
  `cantidad_prestar_profesor` INT NOT NULL,
  PRIMARY KEY (`id_parametros`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
